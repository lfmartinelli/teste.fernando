==================================================================
=								Properties						 =
==================================================================

• schema_info_string
static string - The schema SQL query with comands to get max lenght of fields in table

• connectionString 
static string - String of connection to access ODBC database

• dataBase
string - Which database sever plataform your project wil be use? SQL Server, PostgreSQL, MySQL, Firebase etc.

• htmlInput
string - HTML code to render html input control with value of register in getValueWithHTMLInput method

• htmlGrid
string - HTML code to render html grid control with values of registers in getListWithHTMLGrid method

• htmlForm HTML
string - code to render form (DIV) with html controls to show register values

• Document
string - Document(s) such as contract, sale propose or others to recive register value in [fields]. 
         The document must be in HTML format and fields in [field] format. Ex: The client [name], and your wife [wife_name].   

• lastAction
DateTime - Date of last action executed by the object

• dataPage
int - Page of data of SELECT return. The number of rows in return query be limited by maxRows value
      Each data page load registers collection with maxRows limits of rows. Ex:dataPage=100 => page 1= row 0 to 99; page 2 = row 100 to 199 

• maxRows
int - Maximum number of rows to each data page in query return.
      This limit is important to administrate trafic of data in network and cliente memory

• data
Dictionary<string, dynamic> - Data of first register in dataList.
        Using [nameData] you identify data collection
        The fields be the properties of obejct
        Ex: myobject.data["my_nameData"].name, myobject.data["my_nameData"].age, etc

• dataTables
Dictionary<string, DataTable> - Data tables with query result when query result have more than 1 row.
        You can identify table by dataName. Ex: myobejct.dataTables["client"].rows[2]["name"], myobejct.dataTables["products"].rows[2]["price"]

 Data collumns informations maxLengh and dataType of collumns.
        Identify collumns collections by dataName. Ex: myobject.dataCollumns["users"]["age"].maxLenght, myobject.dataCollumns["clients"]["name"].dataType 
        /// </summary>
        public Dictionary<string, Dictionary<string, dynamic>> dataCollumns { get; set; }

        /// <summary>
        Data collections informations. The dataName is the name of dataCollection. Identify dataColletion by the dataName. Ex: myobject["clients"].fields
        Property "tableName" - Name of the table in database used to load query registers in the data collection.</para>
        Property "fields" - Relation of fields separate by coma in query results. Ex: name,age,address</para>
        Property "filedKey" - Principal primary key of your data table.</para> 
        This field is the reference to update register or insert new register in database, so  can't result null or repeated value becouse this.</para> 
        /// </summary>
        public Dictionary<string, dynamic> dataCollections { get; set; }
        
        /// <summary>
        /// Error number if occurres any exception in action
        /// </summary>
        public int err { get; set; }

        /// <summary>
        JavaScript script to execute that in return results to JS by API.
        When result of API action come back to JavaScript, that script will be executed.
        If you using SimpleAPI, that will execute automatically
        </summary>
        public string script { get; set; }

        /// <summary>
        /// Error message if occurres any exception in action
        /// </summary>
        public string message { get; set; }
